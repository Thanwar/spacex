[{"C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\App.tsx":"1","C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\reportWebVitals.ts":"2","C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\index.tsx":"3","C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\components\\LaunchList\\LaunchList.tsx":"4","C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\generated\\graphql.tsx":"5","C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\components\\LaunchProfile\\index.tsx":"6","C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\components\\LaunchList\\index.tsx":"7","C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\components\\LaunchProfile\\LaunchProfile.tsx":"8"},{"size":461,"mtime":1609520806454,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1609422087702,"results":"11","hashOfConfig":"10"},{"size":719,"mtime":1609512132237,"results":"12","hashOfConfig":"10"},{"size":920,"mtime":1609521069502,"results":"13","hashOfConfig":"10"},{"size":25683,"mtime":1609519887717,"results":"14","hashOfConfig":"10"},{"size":722,"mtime":1609522103697,"results":"15","hashOfConfig":"10"},{"size":475,"mtime":1609521660867,"results":"16","hashOfConfig":"10"},{"size":1399,"mtime":1609522569731,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x6bxa0",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\App.tsx",[],"C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\reportWebVitals.ts",[],"C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\index.tsx",["35"],"C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\components\\LaunchList\\LaunchList.tsx",[],"C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\generated\\graphql.tsx",[],"C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\components\\LaunchProfile\\index.tsx",[],"C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\components\\LaunchList\\index.tsx",[],"C:\\Users\\THAWAR\\Documents\\GitHub\\spacex\\src\\components\\LaunchProfile\\LaunchProfile.tsx",["36"],"import * as React from 'react';\r\nimport { LaunchProfileQuery } from '../../generated/graphql';\r\nimport './styles.css';\r\n\r\ninterface Props {\r\n  data: LaunchProfileQuery;\r\n}\r\n\r\nconst className = 'LaunchProfile';\r\n\r\nconst LaunchProfile: React.FC<Props> = ({ data }) => {\r\n  if (!data.launch) {\r\n    return <div>No launch available</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className={`${className}__status`}>\r\n        <span>Flight # {data.launch.flight_number} </span>\r\n        ({data.launch.launch_success ? (\r\n          <span className={`${className}__success`}>Success</span>\r\n        ) : (\r\n          <span className={`${className}__failed`}>Failed</span>\r\n        )})\r\n      </div>\r\n      <br/>\r\n      <br/>\r\n      <h1 className={`${className}__title`}>\r\n        {data.launch.mission_name}\r\n        {data.launch.rocket &&\r\n          ` (${data.launch.rocket.rocket_name} | ${data.launch.rocket.rocket_type})`}\r\n      </h1>\r\n      <p className={`${className}__description`}>{data.launch.details}</p>\r\n      {!!data.launch.links && !!data.launch.links.flickr_images && (\r\n        <div className={`${className}__image-list`}>\r\n          {data.launch.links.flickr_images.map(image =>\r\n            image ? <img src={image} className={`${className}__image`} key={image} /> : null,\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LaunchProfile;",{"ruleId":"37","severity":1,"message":"38","line":7,"column":10,"nodeType":"39","messageId":"40","endLine":7,"endColumn":13},{"ruleId":"41","severity":1,"message":"42","line":37,"column":21,"nodeType":"43","endLine":37,"endColumn":86},"@typescript-eslint/no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]